name: Haskell CI

on:
  push:



jobs:
  enumerate:
    name: Generate Build Matrix Dynamically
    runs-on: ubuntu-latest
    outputs:
      spec: ${{ steps.enumerate.outputs.spec }}
    steps:
    - uses: actions/checkout@v3
    - name: Enumerate Configs
      id: enumerate
      run: |
        #set -euxo pipefail
        #find ci-configs -type f -name 'ghc-*.config' \
        #  | sort -h | jq -ncR '[inputs | {ghc:  match("ghc-(.+)\\.config$", .) | .captures[0].string | select(.), plan: .}]' | tee configs.json
        cat configs.json
        echo "spec=$(cat configs.json)" >> "${GITHUB_OUTPUT}"

  build:
    needs: [enumerate]
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJSON(needs.enumerate.outputs.spec)}}
        envNumber: ["1","2"]

    runs-on: ubuntu-latest
    name: Haskell GHC ${{ matrix.group }}
    env:
      CABAL: cabal --project-file=${{ matrix.group }}

    steps:
    - uses: actions/checkout@v3

    - name: "Run Test"
      run:  |
        npm install cypress@10.3.1

    - name: Execute tests
      uses: cypress-io/github-action@v5
      with:
        install: false
        wait-on-timeout: 3
        spec: ${{ matrix.group }}
